html {
    box-sizing: border-box;
    font-family: sans-serif;
    font-size: 16px;
    scroll-behavior: smooth;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

/* Inicio estilos del HEADER */
.header {
    --btn-bg-color: #555;
    --scroll-link-color: #777;
    --hover-color: #faebd7;
    --hover-link-bg-color: #555;

    background: black;
    padding: 5px 5px;
    text-align: center;
    position: sticky;
    top: -36.8px;
    min-width: 900px;
    z-index: 100;
}

.back-btn-container {
    position: fixed;
    background-color: var(--btn-bg-color);
    height: 30px;
    width: 30px;
    top: 10px;
    border-radius: 5px;
    z-index: 200;
}

.back-btn-container:hover {
    background-color: var(--hover-color);
}

.back-btn-img {
    position: relative;
    height: 30px;
    width: 30px;
}


h1 {
    color: #faebd7;
    margin-top: 0;
    margin-bottom: 0;
}

.nav {
    padding: .6rem;
}

.nav a {
    color: var(--scroll-link-color);
    margin: 0 1rem;
    padding: .1rem 1rem;
}

.nav a:hover {
    background-color: var(--hover-link-bg-color);
    border-radius: .2rem;
    color: var(--hover-color)
}

section[id] {
    scroll-margin-top: 3ex;
}
/* Fin estilos del HEADER */

.section-container {
    text-align: center;
    padding: 2rem;
}

.grid-container {                                                    /* DISPLAY*/
    display: grid;                                     /* 2 valores:  grid   |   inline-grid */
    background-color: #3f2c13;
    margin: 0 auto;
    height: 39vw;
    width: 39vw;
    gap: .3vw;
}

.grid-item {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #faebd7;  
    font-size: 1vw;
    padding: 1vw;  
}

/* 
GRID DEFINITION
*/
.explicit-grid .grid-container {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: 10vw repeat(3, 1fr) 5vw;
    row-gap: 2vw;
    column-gap: 3vw;
    gap: .3vw;
}

.implicit-grid .grid-container {
    grid-template: 1fr repeat(2, 3fr) / repeat(4, 1fr);
}

.grid-template .grid-lines .grid-container {
    grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4] 1fr [linea-c5]  1fr [linea-c6];
    /* grid-area no funciona correctamente con esta forma de definición por nombre */
}

.grid-template .grid-repeat .grid-container {
    grid-template-columns: repeat(2, 1fr 3fr 1fr 4fr);
    grid-template-rows: repeat(2, 1fr 3fr);
}
/*  
CELL POSITION
*/

.cell-position .grid-row-column .grid-container {
    grid-template: repeat(6, 1fr) / repeat(4, 1fr); 
}
.cell-position .grid-row-column .grid-item:nth-child(12) {
    grid-row-start: 3;    
    grid-row-end: 5;    
}

.cell-position .grid-row-column .grid-item:nth-child(16) {
    grid-row-start: 5;    
    grid-row-end: 7;
    grid-column-start: 1; 
    grid-column-end: 3;    
}

.cell-position .grid-row-column .grid-item:first-child {
    /* VALUES:  grid-row-start / grid-column-start / grid-row-end / grid-column-end */
    grid-area: 6 / 4 / 7 / 5;    
}

.cell-position .grid-areas .grid-container {
    grid-template-rows: 10% repeat(2, 1fr) 10%;
    grid-template-columns: repeat(5, 1fr);
    grid-template-areas: 
    "item-header  item-header  item-header  item-header  item-header"
    "item-main    item-main    item-main    item-main    item-aside"
    "item-main    item-main    item-main    item-main    item-aside"
    "item-footer  item-footer  item-footer  item-footer  item-footer";
}

.item-header {
    grid-area: item-header;
}

.item-main {
    grid-area: item-main;
}

.item-aside {
    grid-area: item-aside;
}

.item-footer {
    grid-area: item-footer;
}

/* 
GRID FLOW
*/

.grid-flow .row .grid-container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-auto-flow: row;
    grid-auto-rows: 2fr;
}

.grid-flow .column .grid-container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-auto-flow: column;
    grid-auto-columns: 3fr;
}

.grid-flow .dense-row .grid-container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-auto-flow: dense row;
    grid-auto-rows: .5fr;
}

.dense-row .grid-item:nth-child(8) {
    grid-row: span 3;
    grid-column: span 3;
}

.grid-flow .dense-column .grid-container {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-auto-flow: dense column;
    grid-auto-columns: .5fr;
}

.dense-column .grid-item:nth-child(7) {
    grid-row: span 3;
}

/* 
GRID LAYERS
*/

.grid-layers .grid-container {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
}

.grid-layers .grid-item:first-child {
    grid-area: 1 / 1 / 3 / 3;
}

.grid-layers .grid-item:nth-child(2) {
    background-color: #d99b49;
    grid-area: 1 / 3 /  3 / 5;    
}

.grid-layers .grid-item:nth-child(3) {
    background-color: #d99b49;
    grid-area: 3 / 1 / 5 / 3;    
}

.grid-layers .grid-item:nth-child(4) {
    
    grid-area: 3 / 3 / 5 / 5;
    
}

.grid-layers .grid-item:nth-child(5) {
    background-color: #a26b23;
    grid-area: 2 / 2 / 4 / 4;    
}

/* 
Order
Su valor por default es 0.
Acepta valores negativos y positivos.
Mientras mayor su valor, mas atrás en el orden de la grid estará posicionado el item.
*/

.order .grid-container {
    grid-template-columns: repeat(3 , 1fr);
    grid-template-rows: repeat(2 , 1fr);
}

.order .grid-item:nth-child(3) {
    order: 1;    
}

/* 
Align
*/
/* Items */
.items-align .grid-container {
    grid-template-columns: repeat(3 , 25%);
    grid-template-rows: repeat(2 , 40%);
    justify-items: stretch;
    justify-items: start;
    justify-items: end;
    justify-items: center;
    align-items: stretch;
    align-items: start;
    align-items: end;
    align-items: center;
}

.items-align .grid-item:nth-child(3) {
    justify-self: stretch;
    align-self: stretch;
}

/* Tracks */
.tracks-align .grid-container {
    grid-template-columns: repeat(3 , 25%);
    grid-template-rows: repeat(2 , 40%);
    justify-content: start;
    justify-content: center;
    justify-content: end;
    justify-content: space-between;
    justify-content: space-around;
    justify-content: space-evenly;
    align-content: end;
    align-content: space-evenly;
}

/* 
MINMAX
*/
.minmax-function .grid-container {
    grid-template-columns: repeat(4, minmax(50px, 100px));
}

.min-max-units .grid-container {
    height: 500px;
    width: 500px;
    grid-template-columns: repeat(4, minmax(min-content, max-content));
}

.min-max-units .grid-item {
    font-size: 1rem;

}

/* 
DYNAMIC GRID
*/
.auto-fill .grid-container {
    width: 80%;
    /* MINMAX no funciona con auto-fll. Ignora el max. */
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}

.auto-fit .grid-container {
    width: 80%;
    /* MINMAX funciona con auto-fit */
    grid-template-columns: repeat(auto-fit, 100px);
}

.dynamic-example .grid-container {
    width: 80%;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

/* 
SUBGRID
Aún no esta implementado en la mayoría de browsers.
Condiciones de uso:
1.Definir la posición que ocupará en la grilla original el elemento contenedor del subgrid.
2.El elemento contenedor del subgrid debe tener display Grid.
3.En las propiedades template-columns/rows (dependiendo de la grilla una o ambas propiedades)debe tener valor subgrid.
*/
.subgrid .grandfather {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

.father {
    display: grid;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
}